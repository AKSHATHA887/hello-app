parameters:
- name: dotnetSdkVersion
  default: ''
  type: string
- name: nuGetServiceConnectionName
  default: ''
  type: string
- name: restoreDirectory
  default: 'DotNetRestoreDirectory'
  type: string  

steps:
  - bash: |
      if [ -z "$NUGETSERVICECONNECTIONNAME" ]; 
      then
        echo "##vso[task.setvariable variable=toRunNugetTask;]false"
        echo "Nuget service connection was not set"
      else
        echo "##vso[task.setvariable variable=toRunNugetTask;]true"
        echo "Nuget service connection was set"
      fi
    displayName: Check for Nuget service connection   

  - task: UseDotNet@2
    displayName: Install DotNet SDK
    condition: ne(variables['toRunNugetTask'], 'false') 
    inputs:
      packageType: 'sdk'
      version: ${{parameters.dotnetSdkVersion }}

  - task: NuGetAuthenticate@0
    displayName: Nuget Authentication
    condition: ne(variables['toRunNugetTask'], 'false') 
    inputs:
      nuGetServiceConnections: ${{ parameters.nugetServiceConnectionName }}

  - task: DotNetCoreCLI@2
    displayName: 'Dotnet Restore'
    condition: ne(variables['toRunNugetTask'], 'false') 
    inputs:
      command: restore
      projects: '**/*.csproj'
      feedsToUse: config
      nugetConfigPath: 'nuget.config'
      externalFeedCredentials: ${{ parameters.nugetServiceConnectionName }}
      restoreDirectory: ${{ parameters.restoreDirectory }}